<com.example.mivanzhang.collapsingtoolbarlayoutdemo.MyFriendsListPullToRefreshLinearLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical">

    <android.support.design.widget.CoordinatorLayout
        android:id="@+id/coordinatorLayout"
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:fitsSystemWindows="true"
        app:layout_anchorGravity="bottom">

        <!-- 第一部分：伸缩工具栏 -->
        <!-- AppBarLayout目前必须是第一个嵌套在CoordinatorLayout里面的子view -->
        <!-- AppBarLayout里面定义的view只要设置了app:layout_scrollFlags属性，就可以在RecyclerView滚动事件发生的时候被触发： -->
        <!-- app:layout_scrollFlags属性里面必须至少启用scroll这个flag，这样这个view才会滚动出屏幕，否则它将一直固定在顶部。 -->
        <!--
        可以使用的其他flag有：
            enterAlways: 一旦向上滚动这个view就可见。
            enterAlwaysCollapsed: 顾名思义，这个flag定义的是何时进入（已经消失之后何时再次显示）。假设你定义了一个最小高度（minHeight）同时enterAlways也定义了，那么view将在到达这个最小高度的时候开始显示，并且从这个时候开始慢慢展开，当滚动到顶部的时候展开完。
            exitUntilCollapsed: 同样顾名思义，这个flag时定义何时退出，当你定义了一个minHeight，这个view将在滚动到达这个最小高度的时候消失。
         -->
        <!-- 记住，要把带有scroll flag的view放在前面，这样收回的view才能让正常退出，而固定的view继续留在顶部。 -->

        <android.support.design.widget.AppBarLayout
            android:id="@+id/appbar"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:fitsSystemWindows="true"
            android:stateListAnimator="@null"
            android:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar">

            <!-- 如果想制造toolbar的折叠效果，我们必须把Toolbar放在CollapsingToolbarLayout中： -->
            <!-- 通常，我们我们都是设置Toolbar的title，而现在，我们需要把title设置在CollapsingToolBarLayout上，而不是Toolbar。 -->
            <!-- 给需要有折叠效果的组件设置 layout_collapseMode属性 -->
            <!-- Toolbar 的高度layout_height必须固定，不能 “wrap_content”，否则Toolbar不会滑动，也没有折叠效果 -->
            <android.support.design.widget.CollapsingToolbarLayout
                android:id="@+id/collapsing_toolbar"
                android:layout_width="match_parent"
                android:layout_height="match_parent"
                android:fitsSystemWindows="true"
                app:contentScrim="?attr/colorPrimary"
                app:layout_scrollFlags="scroll|exitUntilCollapsed">

                <!-- 制造视差效果 -->
                <!-- CollapsingToolbarLayout还能让我们做出更高级的动画，比如在里面放一个ImageView，然后在它折叠的时候渐渐淡出。同时在用户滚动的时候title的高度也会随着改变。 -->
                <!-- 为了制造出这种效果，我们添加一个定义了app:layout_collapseMode="parallax" 属性的ImageView。 -->
                <ImageView
                android:id="@+id/backdrop"
                android:layout_width="match_parent"
                android:layout_height="match_parent"
                app:layout_collapseMode="parallax"
                android:fitsSystemWindows="true"
                android:scaleType="centerCrop"
                app:layout_scrollFlags="scroll|enterAlways|enterAlwaysCollapsed"
                android:src="@drawable/dog" />

            <android.support.v7.widget.Toolbar
                android:id="@+id/toolbar"
                android:layout_width="match_parent"
                android:layout_height="?attr/actionBarSize"
                app:layout_collapseMode="pin"
                app:layout_scrollFlags="scroll|enterAlways"
                app:titleTextAppearance="@style/TextAppearance.AppCompat.Headline"
                app:popupTheme="@style/ThemeOverlay.AppCompat.Dark" />

                    <!--<include-->
                    <!--android:id="@+id/weather"-->
                    <!--layout="@layout/weather_layout"-->
                    <!--android:layout_width="match_parent"-->
                    <!--android:layout_height="48dp" />-->

                    <!--<include-->
                        <!--android:id="@+id/weather"-->
                        <!--layout="@layout/weather_layout"-->
                        <!--app:layout_collapseMode="pin"-->
                        <!--android:layout_width="match_parent"-->
                        <!--android:layout_height="48dp" />-->




                <!--<LinearLayout-->
                    <!--android:layout_width="match_parent"-->
                    <!--android:layout_height="wrap_content"-->
                    <!--android:orientation="vertical">-->
                    <!--<include-->
                        <!--android:id="@+id/weather"-->
                        <!--layout="@layout/weather_layout"-->
                        <!--android:layout_width="match_parent"-->
                        <!--android:layout_height="48dp" />-->

                    <!--<include-->
                        <!--android:id="@+id/actionbar"-->
                        <!--layout="@layout/actionbar_index_custom"-->
                        <!--android:layout_width="match_parent"-->
                        <!--android:layout_height="48dp"-->
                        <!--android:visibility="visible"/>-->

                <!--</LinearLayout>-->

            </android.support.design.widget.CollapsingToolbarLayout>
        </android.support.design.widget.AppBarLayout>

        <android.support.v7.widget.RecyclerView
            android:id="@+id/recycler_view"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:scrollbars="none"
            app:layout_behavior="@string/appbar_scrolling_view_behavior">

        </android.support.v7.widget.RecyclerView>

    </android.support.design.widget.CoordinatorLayout>

</com.example.mivanzhang.collapsingtoolbarlayoutdemo.MyFriendsListPullToRefreshLinearLayout>
